package be.lacerta.cq2.sim.hbn;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

import be.lacerta.cq2.sim.hbn.HbnObject;
import be.lacerta.cq2.sim.hbn.Kingdom;

// Generated 13-jul-2009 14:54:39 by Hibernate Tools 3.2.4.GA

/**
 * Mage generated by hbm2java
 */
public class Mage extends HbnObject implements java.io.Serializable, Comparable<Mage> {

	private String name;
	private String cq2class;
	private Integer level;
	private Kingdom kingdom;

	public Mage() {
	}

	public Mage(String name) {
		this.name = name;
	}

	public Mage(String name, String cq2class, Integer level, Kingdom kingdom) {
		this.name = name;
		this.cq2class = cq2class;
		this.level = level;
		this.kingdom = kingdom;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getCq2class() {
		return this.cq2class;
	}

	public void setCq2class(String cq2class) {
		this.cq2class = cq2class;
	}

	public Integer getLevel() {
		return this.level;
	}

	public void setLevel(Integer level) {
		this.level = level;
	}

	public Kingdom getKingdom() {
		return this.kingdom;
	}

	public void setKingdom(Kingdom kingdom) {
		this.kingdom = kingdom;
	}
	
	public static Mage getOrCreateMage(String name) {
		Mage mage = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			Criteria c = session.createCriteria(Mage.class);
			c.add(Restrictions.ilike("name", name));
			List<Mage> results = c.list();
			if (results != null && results.size() > 0) {
				mage = results.get(0);
			} else {
				mage = new Mage(name,null,0,null);
			}

		} catch (HibernateException e) {
			e.printStackTrace();
		}
		return mage;
	}
	
	@Override
	public String toString() {
		return name;
	}
	

	@Override
	public int compareTo(Mage mage) {
		if (this==mage) return 0;
		if (mage==null) return 1;


		if ((this.getKingdom() == null && mage.getKingdom() == null) || 
			(this.getKingdom() != null && this.getKingdom().equals(mage.getKingdom()))) {
			if (this.getName() == null && mage.getName() != null) return -1;
			if (this.getName() != null && mage.getName() == null) return 1;
			else return this.getName().compareTo(mage.getName());
		} else {
			if (this.getKingdom() == null && mage.getKingdom() != null) return -1;
			if (this.getKingdom() != null && mage.getKingdom() == null) return 1;
			else return this.getKingdom().compareTo(mage.getKingdom());
		}
	}
}
