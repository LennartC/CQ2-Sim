package be.lacerta.cq2.sim.hbn;


import java.util.Date;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

/**
 * GemTracker generated by hbm2java
 */
public class Itherian extends HbnObject implements java.io.Serializable {
	private Integer id;
	private User user;
	private Integer cq2ID;
	private String itemname;
	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Integer getCq2ID() {
		return cq2ID;
	}

	public void setCq2ID(Integer cq2id) {
		cq2ID = cq2id;
	}

	public String getItemname() {
		return itemname;
	}

	public void setItemname(String itemname) {
		this.itemname = itemname;
	}

	public Itherian(){
	}
	
	public static Itherian getItherian(int id) {
		Itherian result = null;
		Transaction tx = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			tx = session.getTransaction();
			Criteria c = session.createCriteria(Itherian.class);
			c.add(Restrictions.eq("cq2ID", id));
			result = (Itherian) c.list().get(0);

		} catch (HibernateException e) {
			e.printStackTrace();
			if (tx != null && tx.isActive())
				tx.rollback();
		} catch (IndexOutOfBoundsException iobe) { }
		return result;
	}

	
	public static List<Itherian> getItherians(User u) {
		List<Itherian> itherians = null;
		Transaction tx = null;
		Session session = HibernateUtil.getSessionFactory().getCurrentSession();
		try {
			tx = session.getTransaction();
			Criteria c = session.createCriteria(Itherian.class);
			c.add(Restrictions.eq("user", u));
			itherians = c.list();

		} catch (HibernateException e) {
			e.printStackTrace();
			if (tx != null && tx.isActive())
				tx.rollback();
		}
		return itherians;
	}

}